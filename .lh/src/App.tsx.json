{
    "sourceFile": "src/App.tsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 110,
            "patches": [
                {
                    "date": 1714989434387,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1714992483892,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -120,9 +120,9 @@\n             <form>\n               <input\n                 data-cy=\"NewTodoField\"\n                 type=\"text\"\n-                className=\"todoapp__new-todo\"\n+                className=\"todoapp__new-todo se\"\n                 placeholder=\"What needs to be done?\"\n                 onKeyDown={handleKeyDown}\n                 value={newTodoTitle}\n                 onChange={handleChange}\n"
                },
                {
                    "date": 1714992516754,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -120,9 +120,9 @@\n             <form>\n               <input\n                 data-cy=\"NewTodoField\"\n                 type=\"text\"\n-                className=\"todoapp__new-todo se\"\n+                className=\"todoapp__new-todo\"\n                 placeholder=\"What needs to be done?\"\n                 onKeyDown={handleKeyDown}\n                 value={newTodoTitle}\n                 onChange={handleChange}\n"
                },
                {
                    "date": 1714992525580,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -118,8 +118,9 @@\n \n             {/* Add a todo on form submit */}\n             <form>\n               <input\n+                id\n                 data-cy=\"NewTodoField\"\n                 type=\"text\"\n                 className=\"todoapp__new-todo\"\n                 placeholder=\"What needs to be done?\"\n"
                },
                {
                    "date": 1714992532989,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -118,12 +118,11 @@\n \n             {/* Add a todo on form submit */}\n             <form>\n               <input\n-                id\n                 data-cy=\"NewTodoField\"\n                 type=\"text\"\n-                className=\"todoapp__new-todo\"\n+                className=\"todoapp__new-todo selected\"\n                 placeholder=\"What needs to be done?\"\n                 onKeyDown={handleKeyDown}\n                 value={newTodoTitle}\n                 onChange={handleChange}\n"
                },
                {
                    "date": 1714993112506,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -14,8 +14,9 @@\n   const [error, setError] = useState<boolean>(false);\n   const [errorType, setErrorType] = useState<Error | null>(null);\n   const [filter, setFilter] = useState<Status>('all');\n   const [newTodoTitle, setNewTodoTitle] = useState('');\n+  \n \n   useEffect(() => {\n     const fetchTodos = async () => {\n       try {\n@@ -120,9 +121,9 @@\n             <form>\n               <input\n                 data-cy=\"NewTodoField\"\n                 type=\"text\"\n-                className=\"todoapp__new-todo selected\"\n+                className=\"todoapp__new-todo\"\n                 placeholder=\"What needs to be done?\"\n                 onKeyDown={handleKeyDown}\n                 value={newTodoTitle}\n                 onChange={handleChange}\n"
                },
                {
                    "date": 1714993119126,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -14,9 +14,9 @@\n   const [error, setError] = useState<boolean>(false);\n   const [errorType, setErrorType] = useState<Error | null>(null);\n   const [filter, setFilter] = useState<Status>('all');\n   const [newTodoTitle, setNewTodoTitle] = useState('');\n-  \n+  const [focus, set]\n \n   useEffect(() => {\n     const fetchTodos = async () => {\n       try {\n"
                },
                {
                    "date": 1714993126360,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -14,9 +14,9 @@\n   const [error, setError] = useState<boolean>(false);\n   const [errorType, setErrorType] = useState<Error | null>(null);\n   const [filter, setFilter] = useState<Status>('all');\n   const [newTodoTitle, setNewTodoTitle] = useState('');\n-  const [focus, set]\n+  const [focus, setFocus] = usestat\n \n   useEffect(() => {\n     const fetchTodos = async () => {\n       try {\n"
                },
                {
                    "date": 1714993133655,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -14,9 +14,9 @@\n   const [error, setError] = useState<boolean>(false);\n   const [errorType, setErrorType] = useState<Error | null>(null);\n   const [filter, setFilter] = useState<Status>('all');\n   const [newTodoTitle, setNewTodoTitle] = useState('');\n-  const [focus, setFocus] = usestat\n+  const [focus, setFocus] = useState<boolean>(true)\n \n   useEffect(() => {\n     const fetchTodos = async () => {\n       try {\n"
                },
                {
                    "date": 1714993144286,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -14,9 +14,9 @@\n   const [error, setError] = useState<boolean>(false);\n   const [errorType, setErrorType] = useState<Error | null>(null);\n   const [filter, setFilter] = useState<Status>('all');\n   const [newTodoTitle, setNewTodoTitle] = useState('');\n-  const [focus, setFocus] = useState<boolean>(true)\n+  const [focus, setFocus] = useState<boolean>(true);\n \n   useEffect(() => {\n     const fetchTodos = async () => {\n       try {\n@@ -35,8 +35,10 @@\n   if (!USER_ID) {\n     return <UserWarning />;\n   }\n \n+  \n+\n   const handleDeleteTodo = (id: number) => {\n     setTodos(prevTodos => prevTodos.filter(todo => todo.id !== id));\n \n     setError(true);\n"
                },
                {
                    "date": 1714993151059,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -35,9 +35,9 @@\n   if (!USER_ID) {\n     return <UserWarning />;\n   }\n \n-  \n+  const onFocus\n \n   const handleDeleteTodo = (id: number) => {\n     setTodos(prevTodos => prevTodos.filter(todo => todo.id !== id));\n \n"
                },
                {
                    "date": 1714993156589,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -35,9 +35,9 @@\n   if (!USER_ID) {\n     return <UserWarning />;\n   }\n \n-  const onFocus\n+  const onFocus = \n \n   const handleDeleteTodo = (id: number) => {\n     setTodos(prevTodos => prevTodos.filter(todo => todo.id !== id));\n \n"
                },
                {
                    "date": 1714993161742,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -35,9 +35,9 @@\n   if (!USER_ID) {\n     return <UserWarning />;\n   }\n \n-  const onFocus = \n+  const onFocus = () =\n \n   const handleDeleteTodo = (id: number) => {\n     setTodos(prevTodos => prevTodos.filter(todo => todo.id !== id));\n \n"
                },
                {
                    "date": 1714993166811,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -35,9 +35,11 @@\n   if (!USER_ID) {\n     return <UserWarning />;\n   }\n \n-  const onFocus = () =\n+  const onFocus = () => {\n+    setFocus\n+  }\n \n   const handleDeleteTodo = (id: number) => {\n     setTodos(prevTodos => prevTodos.filter(todo => todo.id !== id));\n \n"
                },
                {
                    "date": 1714993173907,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -36,10 +36,10 @@\n     return <UserWarning />;\n   }\n \n   const onFocus = () => {\n-    setFocus\n-  }\n+    setFocus(true);\n+  };\n \n   const handleDeleteTodo = (id: number) => {\n     setTodos(prevTodos => prevTodos.filter(todo => todo.id !== id));\n \n"
                },
                {
                    "date": 1714993186049,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -130,8 +130,9 @@\n                 placeholder=\"What needs to be done?\"\n                 onKeyDown={handleKeyDown}\n                 value={newTodoTitle}\n                 onChange={handleChange}\n+                \n               />\n             </form>\n           </header>\n \n"
                },
                {
                    "date": 1714993191110,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -130,9 +130,9 @@\n                 placeholder=\"What needs to be done?\"\n                 onKeyDown={handleKeyDown}\n                 value={newTodoTitle}\n                 onChange={handleChange}\n-                \n+                onFocus={}\n               />\n             </form>\n           </header>\n \n"
                },
                {
                    "date": 1714993202771,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -35,9 +35,9 @@\n   if (!USER_ID) {\n     return <UserWarning />;\n   }\n \n-  const onFocus = () => {\n+  const Focus = () => {\n     setFocus(true);\n   };\n \n   const handleDeleteTodo = (id: number) => {\n"
                },
                {
                    "date": 1714993211982,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -35,9 +35,9 @@\n   if (!USER_ID) {\n     return <UserWarning />;\n   }\n \n-  const Focus = () => {\n+  const handleFocus = () => {\n     setFocus(true);\n   };\n \n   const handleDeleteTodo = (id: number) => {\n@@ -130,9 +130,9 @@\n                 placeholder=\"What needs to be done?\"\n                 onKeyDown={handleKeyDown}\n                 value={newTodoTitle}\n                 onChange={handleChange}\n-                onFocus={}\n+                onFocus={handleChange}\n               />\n             </form>\n           </header>\n \n"
                },
                {
                    "date": 1714993248946,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -39,8 +39,10 @@\n   const handleFocus = () => {\n     setFocus(true);\n   };\n \n+  \n+\n   const handleDeleteTodo = (id: number) => {\n     setTodos(prevTodos => prevTodos.filter(todo => todo.id !== id));\n \n     setError(true);\n@@ -130,9 +132,9 @@\n                 placeholder=\"What needs to be done?\"\n                 onKeyDown={handleKeyDown}\n                 value={newTodoTitle}\n                 onChange={handleChange}\n-                onFocus={handleChange}\n+                onFocus={handleFocus}\n               />\n             </form>\n           </header>\n \n"
                },
                {
                    "date": 1714993254959,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -39,9 +39,9 @@\n   const handleFocus = () => {\n     setFocus(true);\n   };\n \n-  \n+  const handleBlur\n \n   const handleDeleteTodo = (id: number) => {\n     setTodos(prevTodos => prevTodos.filter(todo => todo.id !== id));\n \n"
                },
                {
                    "date": 1714993260050,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -39,9 +39,11 @@\n   const handleFocus = () => {\n     setFocus(true);\n   };\n \n-  const handleBlur\n+  const handleBlur = () => {\n+    \n+  }\n \n   const handleDeleteTodo = (id: number) => {\n     setTodos(prevTodos => prevTodos.filter(todo => todo.id !== id));\n \n"
                },
                {
                    "date": 1714993268471,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -40,9 +40,9 @@\n     setFocus(true);\n   };\n \n   const handleBlur = () => {\n-    \n+    setFocus(false)\n   }\n \n   const handleDeleteTodo = (id: number) => {\n     setTodos(prevTodos => prevTodos.filter(todo => todo.id !== id));\n"
                },
                {
                    "date": 1714993273600,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -40,10 +40,10 @@\n     setFocus(true);\n   };\n \n   const handleBlur = () => {\n-    setFocus(false)\n-  }\n+    setFocus(false);\n+  };\n \n   const handleDeleteTodo = (id: number) => {\n     setTodos(prevTodos => prevTodos.filter(todo => todo.id !== id));\n \n"
                },
                {
                    "date": 1714993286011,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -135,8 +135,9 @@\n                 onKeyDown={handleKeyDown}\n                 value={newTodoTitle}\n                 onChange={handleChange}\n                 onFocus={handleFocus}\n+                \n               />\n             </form>\n           </header>\n \n"
                },
                {
                    "date": 1714993292060,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -135,9 +135,9 @@\n                 onKeyDown={handleKeyDown}\n                 value={newTodoTitle}\n                 onChange={handleChange}\n                 onFocus={handleFocus}\n-                \n+                onBlur={handl}\n               />\n             </form>\n           </header>\n \n"
                },
                {
                    "date": 1714993310924,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -135,9 +135,10 @@\n                 onKeyDown={handleKeyDown}\n                 value={newTodoTitle}\n                 onChange={handleChange}\n                 onFocus={handleFocus}\n-                onBlur={handl}\n+                onBlur={handleBlur}\n+                auto\n               />\n             </form>\n           </header>\n \n"
                },
                {
                    "date": 1714993316200,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -136,9 +136,9 @@\n                 value={newTodoTitle}\n                 onChange={handleChange}\n                 onFocus={handleFocus}\n                 onBlur={handleBlur}\n-                auto\n+                autoFocus={}\n               />\n             </form>\n           </header>\n \n"
                },
                {
                    "date": 1714993334200,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -135,10 +135,10 @@\n                 onKeyDown={handleKeyDown}\n                 value={newTodoTitle}\n                 onChange={handleChange}\n                 onFocus={handleFocus}\n-                onBlur={handleBlur}\n-                autoFocus={}\n+                // onBlur={handleBlur}\n+                autoFocus={focus}\n               />\n             </form>\n           </header>\n \n"
                },
                {
                    "date": 1714993471454,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,169 @@\n+/* eslint-disable jsx-a11y/label-has-associated-control */\n+/* eslint-disable jsx-a11y/control-has-associated-label */\n+import React, { useEffect, useState } from 'react';\n+import { UserWarning } from './UserWarning';\n+import { USER_ID, getTodos } from './api/todos';\n+import { TodoList } from './Components/TodoList';\n+import { ErrorNotification } from './Components/ErrorNotification';\n+import { Footer } from './Components/Footer';\n+import { Status, Todoo } from './types/Todo';\n+import { Error } from './types/Todo';\n+\n+export const App: React.FC = () => {\n+  const [todos, setTodos] = useState<Todoo[]>([]);\n+  const [error, setError] = useState<boolean>(false);\n+  const [errorType, setErrorType] = useState<Error | null>(null);\n+  const [filter, setFilter] = useState<Status>('all');\n+  const [newTodoTitle, setNewTodoTitle] = useState('');\n+  const [focus, setFocus] = useState<boolean>(true);\n+\n+  useEffect(() => {\n+    const fetchTodos = async () => {\n+      try {\n+        const todosData = await getTodos();\n+\n+        setTodos(todosData);\n+      } catch (err) {\n+        setError(true);\n+        setErrorType('load');\n+      }\n+    };\n+\n+    fetchTodos();\n+  }, []);\n+\n+  if (!USER_ID) {\n+    return <UserWarning />;\n+  }\n+\n+  const handleFocus = () => {\n+    setFocus(true);\n+  };\n+\n+  const handleDeleteTodo = (id: number) => {\n+    setTodos(prevTodos => prevTodos.filter(todo => todo.id !== id));\n+\n+    setError(true);\n+\n+    setErrorType('delete');\n+  };\n+\n+  const handleToggleTodo = (id: number) => {\n+    setTodos(prev =>\n+      prev.map(todo =>\n+        todo.id === id ? { ...todo, completed: !todo.completed } : todo,\n+      ),\n+    );\n+  };\n+\n+  const handleToggleAllTodos = () => {\n+    const allCompleted = todos.every(todo => todo.completed);\n+\n+    setTodos(prev =>\n+      prev.map(todo => ({\n+        ...todo,\n+        completed: !allCompleted,\n+      })),\n+    );\n+  };\n+\n+  const hideError = () => {\n+    setError(false);\n+  };\n+\n+  const handleKeyDown = (event: React.KeyboardEvent<HTMLInputElement>) => {\n+    const trimmedTodo = newTodoTitle.trim();\n+\n+    if (event.key === 'Enter') {\n+      event.preventDefault();\n+\n+      if (trimmedTodo) {\n+        const newTodo: Todoo = {\n+          id: todos.length + 1,\n+          userId: USER_ID,\n+          title: trimmedTodo,\n+          completed: false,\n+        };\n+\n+        setTodos(prevTodos => [...prevTodos, newTodo]);\n+        setNewTodoTitle('');\n+      } else {\n+        setError(true);\n+        setErrorType('empty');\n+      }\n+    }\n+  };\n+\n+  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n+    setNewTodoTitle(event.target.value);\n+  };\n+\n+  const onClearCompleted = () => {\n+    setTodos(prevTodos => prevTodos.filter(todo => !todo.completed));\n+  };\n+\n+  const handleFilterChange = (newFilter: Status) => {\n+    setFilter(newFilter);\n+  };\n+\n+  return (\n+    <div className=\"todoapp\">\n+      {!USER_ID && <UserWarning />}\n+      <h1 className=\"todoapp__title\">todos</h1>\n+      {USER_ID && (\n+        <div className=\"todoapp__content\">\n+          <header className=\"todoapp__header\">\n+            {/* this button should have `active` class only if all todos are completed */}\n+            <button\n+              type=\"button\"\n+              className={`todoapp__toggle-all ${todos.every(todo => todo.completed) ? 'active' : ''}`}\n+              data-cy=\"ToggleAllButton\"\n+              onClick={handleToggleAllTodos}\n+            />\n+\n+            {/* Add a todo on form submit */}\n+            <form>\n+              <input\n+                data-cy=\"NewTodoField\"\n+                type=\"text\"\n+                className=\"todoapp__new-todo\"\n+                placeholder=\"What needs to be done?\"\n+                onKeyDown={handleKeyDown}\n+                value={newTodoTitle}\n+                onChange={handleChange}\n+                onFocus={handleFocus}\n+                // onBlur={handleBlur}\n+                autoFocus={focus}\n+              />\n+            </form>\n+          </header>\n+\n+          <TodoList\n+            todos={todos}\n+            onDeleteTodo={handleDeleteTodo}\n+            onToggleTodo={handleToggleTodo}\n+            filter={filter}\n+          />\n+\n+          {/* Hide the footer if there are no todos */}\n+          {todos.length > 0 && (\n+            <Footer\n+              filter={filter}\n+              todosCount={todos.length}\n+              completedTodosCount={todos.filter(todo => todo.completed).length}\n+              onClearCompleted={onClearCompleted}\n+              handleFilterChange={handleFilterChange}\n+            />\n+          )}\n+        </div>\n+      )}\n+      {/* DON'T use conditional rendering to hide the notification */}\n+      {/* Add the 'hidden' class to hide the message smoothly */}\n+      <ErrorNotification\n+        error={error}\n+        errorType={errorType}\n+        hideError={hideError}\n+      />\n+    </div>\n+  );\n+};\n"
                },
                {
                    "date": 1714993478918,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,168 @@\n+/* eslint-disable jsx-a11y/label-has-associated-control */\n+/* eslint-disable jsx-a11y/control-has-associated-label */\n+import React, { useEffect, useState } from 'react';\n+import { UserWarning } from './UserWarning';\n+import { USER_ID, getTodos } from './api/todos';\n+import { TodoList } from './Components/TodoList';\n+import { ErrorNotification } from './Components/ErrorNotification';\n+import { Footer } from './Components/Footer';\n+import { Status, Todoo } from './types/Todo';\n+import { Error } from './types/Todo';\n+\n+export const App: React.FC = () => {\n+  const [todos, setTodos] = useState<Todoo[]>([]);\n+  const [error, setError] = useState<boolean>(false);\n+  const [errorType, setErrorType] = useState<Error | null>(null);\n+  const [filter, setFilter] = useState<Status>('all');\n+  const [newTodoTitle, setNewTodoTitle] = useState('');\n+  const [focus, setFocus] = useState<boolean>(true);\n+\n+  useEffect(() => {\n+    const fetchTodos = async () => {\n+      try {\n+        const todosData = await getTodos();\n+\n+        setTodos(todosData);\n+      } catch (err) {\n+        setError(true);\n+        setErrorType('load');\n+      }\n+    };\n+\n+    fetchTodos();\n+  }, []);\n+\n+  if (!USER_ID) {\n+    return <UserWarning />;\n+  }\n+\n+  const handleFocus = () => {\n+    setFocus(true);\n+  };\n+\n+  const handleDeleteTodo = (id: number) => {\n+    setTodos(prevTodos => prevTodos.filter(todo => todo.id !== id));\n+\n+    setError(true);\n+\n+    setErrorType('delete');\n+  };\n+\n+  const handleToggleTodo = (id: number) => {\n+    setTodos(prev =>\n+      prev.map(todo =>\n+        todo.id === id ? { ...todo, completed: !todo.completed } : todo,\n+      ),\n+    );\n+  };\n+\n+  const handleToggleAllTodos = () => {\n+    const allCompleted = todos.every(todo => todo.completed);\n+\n+    setTodos(prev =>\n+      prev.map(todo => ({\n+        ...todo,\n+        completed: !allCompleted,\n+      })),\n+    );\n+  };\n+\n+  const hideError = () => {\n+    setError(false);\n+  };\n+\n+  const handleKeyDown = (event: React.KeyboardEvent<HTMLInputElement>) => {\n+    const trimmedTodo = newTodoTitle.trim();\n+\n+    if (event.key === 'Enter') {\n+      event.preventDefault();\n+\n+      if (trimmedTodo) {\n+        const newTodo: Todoo = {\n+          id: todos.length + 1,\n+          userId: USER_ID,\n+          title: trimmedTodo,\n+          completed: false,\n+        };\n+\n+        setTodos(prevTodos => [...prevTodos, newTodo]);\n+        setNewTodoTitle('');\n+      } else {\n+        setError(true);\n+        setErrorType('empty');\n+      }\n+    }\n+  };\n+\n+  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n+    setNewTodoTitle(event.target.value);\n+  };\n+\n+  const onClearCompleted = () => {\n+    setTodos(prevTodos => prevTodos.filter(todo => !todo.completed));\n+  };\n+\n+  const handleFilterChange = (newFilter: Status) => {\n+    setFilter(newFilter);\n+  };\n+\n+  return (\n+    <div className=\"todoapp\">\n+      {!USER_ID && <UserWarning />}\n+      <h1 className=\"todoapp__title\">todos</h1>\n+      {USER_ID && (\n+        <div className=\"todoapp__content\">\n+          <header className=\"todoapp__header\">\n+            {/* this button should have `active` class only if all todos are completed */}\n+            <button\n+              type=\"button\"\n+              className={`todoapp__toggle-all ${todos.every(todo => todo.completed) ? 'active' : ''}`}\n+              data-cy=\"ToggleAllButton\"\n+              onClick={handleToggleAllTodos}\n+            />\n+\n+            {/* Add a todo on form submit */}\n+            <form>\n+              <input\n+                data-cy=\"NewTodoField\"\n+                type=\"text\"\n+                className=\"todoapp__new-todo\"\n+                placeholder=\"What needs to be done?\"\n+                onKeyDown={handleKeyDown}\n+                value={newTodoTitle}\n+                onChange={handleChange}\n+                onFocus={handleFocus}\n+                autoFocus={focus}\n+              />\n+            </form>\n+          </header>\n+\n+          <TodoList\n+            todos={todos}\n+            onDeleteTodo={handleDeleteTodo}\n+            onToggleTodo={handleToggleTodo}\n+            filter={filter}\n+          />\n+\n+          {/* Hide the footer if there are no todos */}\n+          {todos.length > 0 && (\n+            <Footer\n+              filter={filter}\n+              todosCount={todos.length}\n+              completedTodosCount={todos.filter(todo => todo.completed).length}\n+              onClearCompleted={onClearCompleted}\n+              handleFilterChange={handleFilterChange}\n+            />\n+          )}\n+        </div>\n+      )}\n+      {/* DON'T use conditional rendering to hide the notification */}\n+      {/* Add the 'hidden' class to hide the message smoothly */}\n+      <ErrorNotification\n+        error={error}\n+        errorType={errorType}\n+        hideError={hideError}\n+      />\n+    </div>\n+  );\n+};\n"
                },
                {
                    "date": 1714993690906,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -15,8 +15,9 @@\n   const [errorType, setErrorType] = useState<Error | null>(null);\n   const [filter, setFilter] = useState<Status>('all');\n   const [newTodoTitle, setNewTodoTitle] = useState('');\n   const [focus, setFocus] = useState<boolean>(true);\n+  const \n \n   useEffect(() => {\n     const fetchTodos = async () => {\n       try {\n@@ -165,346 +166,4 @@\n       />\n     </div>\n   );\n };\n-/* eslint-disable jsx-a11y/label-has-associated-control */\n-/* eslint-disable jsx-a11y/control-has-associated-label */\n-import React, { useEffect, useState } from 'react';\n-import { UserWarning } from './UserWarning';\n-import { USER_ID, getTodos } from './api/todos';\n-import { TodoList } from './Components/TodoList';\n-import { ErrorNotification } from './Components/ErrorNotification';\n-import { Footer } from './Components/Footer';\n-import { Status, Todoo } from './types/Todo';\n-import { Error } from './types/Todo';\n-\n-export const App: React.FC = () => {\n-  const [todos, setTodos] = useState<Todoo[]>([]);\n-  const [error, setError] = useState<boolean>(false);\n-  const [errorType, setErrorType] = useState<Error | null>(null);\n-  const [filter, setFilter] = useState<Status>('all');\n-  const [newTodoTitle, setNewTodoTitle] = useState('');\n-  const [focus, setFocus] = useState<boolean>(true);\n-\n-  useEffect(() => {\n-    const fetchTodos = async () => {\n-      try {\n-        const todosData = await getTodos();\n-\n-        setTodos(todosData);\n-      } catch (err) {\n-        setError(true);\n-        setErrorType('load');\n-      }\n-    };\n-\n-    fetchTodos();\n-  }, []);\n-\n-  if (!USER_ID) {\n-    return <UserWarning />;\n-  }\n-\n-  const handleFocus = () => {\n-    setFocus(true);\n-  };\n-\n-  const handleDeleteTodo = (id: number) => {\n-    setTodos(prevTodos => prevTodos.filter(todo => todo.id !== id));\n-\n-    setError(true);\n-\n-    setErrorType('delete');\n-  };\n-\n-  const handleToggleTodo = (id: number) => {\n-    setTodos(prev =>\n-      prev.map(todo =>\n-        todo.id === id ? { ...todo, completed: !todo.completed } : todo,\n-      ),\n-    );\n-  };\n-\n-  const handleToggleAllTodos = () => {\n-    const allCompleted = todos.every(todo => todo.completed);\n-\n-    setTodos(prev =>\n-      prev.map(todo => ({\n-        ...todo,\n-        completed: !allCompleted,\n-      })),\n-    );\n-  };\n-\n-  const hideError = () => {\n-    setError(false);\n-  };\n-\n-  const handleKeyDown = (event: React.KeyboardEvent<HTMLInputElement>) => {\n-    const trimmedTodo = newTodoTitle.trim();\n-\n-    if (event.key === 'Enter') {\n-      event.preventDefault();\n-\n-      if (trimmedTodo) {\n-        const newTodo: Todoo = {\n-          id: todos.length + 1,\n-          userId: USER_ID,\n-          title: trimmedTodo,\n-          completed: false,\n-        };\n-\n-        setTodos(prevTodos => [...prevTodos, newTodo]);\n-        setNewTodoTitle('');\n-      } else {\n-        setError(true);\n-        setErrorType('empty');\n-      }\n-    }\n-  };\n-\n-  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n-    setNewTodoTitle(event.target.value);\n-  };\n-\n-  const onClearCompleted = () => {\n-    setTodos(prevTodos => prevTodos.filter(todo => !todo.completed));\n-  };\n-\n-  const handleFilterChange = (newFilter: Status) => {\n-    setFilter(newFilter);\n-  };\n-\n-  return (\n-    <div className=\"todoapp\">\n-      {!USER_ID && <UserWarning />}\n-      <h1 className=\"todoapp__title\">todos</h1>\n-      {USER_ID && (\n-        <div className=\"todoapp__content\">\n-          <header className=\"todoapp__header\">\n-            {/* this button should have `active` class only if all todos are completed */}\n-            <button\n-              type=\"button\"\n-              className={`todoapp__toggle-all ${todos.every(todo => todo.completed) ? 'active' : ''}`}\n-              data-cy=\"ToggleAllButton\"\n-              onClick={handleToggleAllTodos}\n-            />\n-\n-            {/* Add a todo on form submit */}\n-            <form>\n-              <input\n-                data-cy=\"NewTodoField\"\n-                type=\"text\"\n-                className=\"todoapp__new-todo\"\n-                placeholder=\"What needs to be done?\"\n-                onKeyDown={handleKeyDown}\n-                value={newTodoTitle}\n-                onChange={handleChange}\n-                onFocus={handleFocus}\n-                // onBlur={handleBlur}\n-                autoFocus={focus}\n-              />\n-            </form>\n-          </header>\n-\n-          <TodoList\n-            todos={todos}\n-            onDeleteTodo={handleDeleteTodo}\n-            onToggleTodo={handleToggleTodo}\n-            filter={filter}\n-          />\n-\n-          {/* Hide the footer if there are no todos */}\n-          {todos.length > 0 && (\n-            <Footer\n-              filter={filter}\n-              todosCount={todos.length}\n-              completedTodosCount={todos.filter(todo => todo.completed).length}\n-              onClearCompleted={onClearCompleted}\n-              handleFilterChange={handleFilterChange}\n-            />\n-          )}\n-        </div>\n-      )}\n-      {/* DON'T use conditional rendering to hide the notification */}\n-      {/* Add the 'hidden' class to hide the message smoothly */}\n-      <ErrorNotification\n-        error={error}\n-        errorType={errorType}\n-        hideError={hideError}\n-      />\n-    </div>\n-  );\n-};\n-/* eslint-disable jsx-a11y/label-has-associated-control */\n-/* eslint-disable jsx-a11y/control-has-associated-label */\n-import React, { useEffect, useState } from 'react';\n-import { UserWarning } from './UserWarning';\n-import { USER_ID, getTodos } from './api/todos';\n-import { TodoList } from './Components/TodoList';\n-import { ErrorNotification } from './Components/ErrorNotification';\n-import { Footer } from './Components/Footer';\n-import { Status, Todoo } from './types/Todo';\n-import { Error } from './types/Todo';\n-\n-export const App: React.FC = () => {\n-  const [todos, setTodos] = useState<Todoo[]>([]);\n-  const [error, setError] = useState<boolean>(false);\n-  const [errorType, setErrorType] = useState<Error | null>(null);\n-  const [filter, setFilter] = useState<Status>('all');\n-  const [newTodoTitle, setNewTodoTitle] = useState('');\n-  const [focus, setFocus] = useState<boolean>(true);\n-\n-  useEffect(() => {\n-    const fetchTodos = async () => {\n-      try {\n-        const todosData = await getTodos();\n-\n-        setTodos(todosData);\n-      } catch (err) {\n-        setError(true);\n-        setErrorType('load');\n-      }\n-    };\n-\n-    fetchTodos();\n-  }, []);\n-\n-  if (!USER_ID) {\n-    return <UserWarning />;\n-  }\n-\n-  const handleFocus = () => {\n-    setFocus(true);\n-  };\n-\n-  const handleBlur = () => {\n-    setFocus(false);\n-  };\n-\n-  const handleDeleteTodo = (id: number) => {\n-    setTodos(prevTodos => prevTodos.filter(todo => todo.id !== id));\n-\n-    setError(true);\n-\n-    setErrorType('delete');\n-  };\n-\n-  const handleToggleTodo = (id: number) => {\n-    setTodos(prev =>\n-      prev.map(todo =>\n-        todo.id === id ? { ...todo, completed: !todo.completed } : todo,\n-      ),\n-    );\n-  };\n-\n-  const handleToggleAllTodos = () => {\n-    const allCompleted = todos.every(todo => todo.completed);\n-\n-    setTodos(prev =>\n-      prev.map(todo => ({\n-        ...todo,\n-        completed: !allCompleted,\n-      })),\n-    );\n-  };\n-\n-  const hideError = () => {\n-    setError(false);\n-  };\n-\n-  const handleKeyDown = (event: React.KeyboardEvent<HTMLInputElement>) => {\n-    const trimmedTodo = newTodoTitle.trim();\n-\n-    if (event.key === 'Enter') {\n-      event.preventDefault();\n-\n-      if (trimmedTodo) {\n-        const newTodo: Todoo = {\n-          id: todos.length + 1,\n-          userId: USER_ID,\n-          title: trimmedTodo,\n-          completed: false,\n-        };\n-\n-        setTodos(prevTodos => [...prevTodos, newTodo]);\n-        setNewTodoTitle('');\n-      } else {\n-        setError(true);\n-        setErrorType('empty');\n-      }\n-    }\n-  };\n-\n-  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n-    setNewTodoTitle(event.target.value);\n-  };\n-\n-  const onClearCompleted = () => {\n-    setTodos(prevTodos => prevTodos.filter(todo => !todo.completed));\n-  };\n-\n-  const handleFilterChange = (newFilter: Status) => {\n-    setFilter(newFilter);\n-  };\n-\n-  return (\n-    <div className=\"todoapp\">\n-      {!USER_ID && <UserWarning />}\n-      <h1 className=\"todoapp__title\">todos</h1>\n-      {USER_ID && (\n-        <div className=\"todoapp__content\">\n-          <header className=\"todoapp__header\">\n-            {/* this button should have `active` class only if all todos are completed */}\n-            <button\n-              type=\"button\"\n-              className={`todoapp__toggle-all ${todos.every(todo => todo.completed) ? 'active' : ''}`}\n-              data-cy=\"ToggleAllButton\"\n-              onClick={handleToggleAllTodos}\n-            />\n-\n-            {/* Add a todo on form submit */}\n-            <form>\n-              <input\n-                data-cy=\"NewTodoField\"\n-                type=\"text\"\n-                className=\"todoapp__new-todo\"\n-                placeholder=\"What needs to be done?\"\n-                onKeyDown={handleKeyDown}\n-                value={newTodoTitle}\n-                onChange={handleChange}\n-                onFocus={handleFocus}\n-                // onBlur={handleBlur}\n-                autoFocus={focus}\n-              />\n-            </form>\n-          </header>\n-\n-          <TodoList\n-            todos={todos}\n-            onDeleteTodo={handleDeleteTodo}\n-            onToggleTodo={handleToggleTodo}\n-            filter={filter}\n-          />\n-\n-          {/* Hide the footer if there are no todos */}\n-          {todos.length > 0 && (\n-            <Footer\n-              filter={filter}\n-              todosCount={todos.length}\n-              completedTodosCount={todos.filter(todo => todo.completed).length}\n-              onClearCompleted={onClearCompleted}\n-              handleFilterChange={handleFilterChange}\n-            />\n-          )}\n-        </div>\n-      )}\n-      {/* DON'T use conditional rendering to hide the notification */}\n-      {/* Add the 'hidden' class to hide the message smoothly */}\n-      <ErrorNotification\n-        error={error}\n-        errorType={errorType}\n-        hideError={hideError}\n-      />\n-    </div>\n-  );\n-};\n"
                },
                {
                    "date": 1714993697698,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -15,9 +15,9 @@\n   const [errorType, setErrorType] = useState<Error | null>(null);\n   const [filter, setFilter] = useState<Status>('all');\n   const [newTodoTitle, setNewTodoTitle] = useState('');\n   const [focus, setFocus] = useState<boolean>(true);\n-  const \n+  const [loading, ] = \n \n   useEffect(() => {\n     const fetchTodos = async () => {\n       try {\n"
                },
                {
                    "date": 1714993703451,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -15,9 +15,9 @@\n   const [errorType, setErrorType] = useState<Error | null>(null);\n   const [filter, setFilter] = useState<Status>('all');\n   const [newTodoTitle, setNewTodoTitle] = useState('');\n   const [focus, setFocus] = useState<boolean>(true);\n-  const [loading, ] = \n+  const [loading, ] = useState<>\n \n   useEffect(() => {\n     const fetchTodos = async () => {\n       try {\n"
                },
                {
                    "date": 1714993709635,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -15,9 +15,9 @@\n   const [errorType, setErrorType] = useState<Error | null>(null);\n   const [filter, setFilter] = useState<Status>('all');\n   const [newTodoTitle, setNewTodoTitle] = useState('');\n   const [focus, setFocus] = useState<boolean>(true);\n-  const [loading, ] = useState<>\n+  const [loading, ] = useState<boolean>(false)\n \n   useEffect(() => {\n     const fetchTodos = async () => {\n       try {\n"
                },
                {
                    "date": 1714993720324,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -15,9 +15,9 @@\n   const [errorType, setErrorType] = useState<Error | null>(null);\n   const [filter, setFilter] = useState<Status>('all');\n   const [newTodoTitle, setNewTodoTitle] = useState('');\n   const [focus, setFocus] = useState<boolean>(true);\n-  const [loading, ] = useState<boolean>(false)\n+  const [loading,] = useState<boolean>(false);\n \n   useEffect(() => {\n     const fetchTodos = async () => {\n       try {\n@@ -133,8 +133,9 @@\n                 value={newTodoTitle}\n                 onChange={handleChange}\n                 onFocus={handleFocus}\n                 autoFocus={focus}\n+                \n               />\n             </form>\n           </header>\n \n"
                },
                {
                    "date": 1714993728334,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -133,9 +133,9 @@\n                 value={newTodoTitle}\n                 onChange={handleChange}\n                 onFocus={handleFocus}\n                 autoFocus={focus}\n-                \n+                disab\n               />\n             </form>\n           </header>\n \n"
                },
                {
                    "date": 1714993761941,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -15,9 +15,9 @@\n   const [errorType, setErrorType] = useState<Error | null>(null);\n   const [filter, setFilter] = useState<Status>('all');\n   const [newTodoTitle, setNewTodoTitle] = useState('');\n   const [focus, setFocus] = useState<boolean>(true);\n-  const [loading,] = useState<boolean>(false);\n+  const [loading, ] = useState<boolean>(false);\n \n   useEffect(() => {\n     const fetchTodos = async () => {\n       try {\n@@ -133,9 +133,9 @@\n                 value={newTodoTitle}\n                 onChange={handleChange}\n                 onFocus={handleFocus}\n                 autoFocus={focus}\n-                disab\n+                disabled={loading}\n               />\n             </form>\n           </header>\n \n"
                },
                {
                    "date": 1714993770140,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -15,9 +15,8 @@\n   const [errorType, setErrorType] = useState<Error | null>(null);\n   const [filter, setFilter] = useState<Status>('all');\n   const [newTodoTitle, setNewTodoTitle] = useState('');\n   const [focus, setFocus] = useState<boolean>(true);\n-  const [loading, ] = useState<boolean>(false);\n \n   useEffect(() => {\n     const fetchTodos = async () => {\n       try {\n"
                },
                {
                    "date": 1714993945538,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -74,9 +74,9 @@\n   const handleKeyDown = (event: React.KeyboardEvent<HTMLInputElement>) => {\n     const trimmedTodo = newTodoTitle.trim();\n \n     if (event.key === 'Enter') {\n-      event.preventDefault();\n+      event\n \n       if (trimmedTodo) {\n         const newTodo: Todoo = {\n           id: todos.length + 1,\n@@ -132,9 +132,8 @@\n                 value={newTodoTitle}\n                 onChange={handleChange}\n                 onFocus={handleFocus}\n                 autoFocus={focus}\n-                disabled={loading}\n               />\n             </form>\n           </header>\n \n"
                },
                {
                    "date": 1714993952485,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -74,9 +74,9 @@\n   const handleKeyDown = (event: React.KeyboardEvent<HTMLInputElement>) => {\n     const trimmedTodo = newTodoTitle.trim();\n \n     if (event.key === 'Enter') {\n-      event\n+      <event className=\"currentTarget disab\"></event>\n \n       if (trimmedTodo) {\n         const newTodo: Todoo = {\n           id: todos.length + 1,\n"
                },
                {
                    "date": 1714993959871,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -74,9 +74,9 @@\n   const handleKeyDown = (event: React.KeyboardEvent<HTMLInputElement>) => {\n     const trimmedTodo = newTodoTitle.trim();\n \n     if (event.key === 'Enter') {\n-      <event className=\"currentTarget disab\"></event>\n+      event.currentTarget.disabled = tru\n \n       if (trimmedTodo) {\n         const newTodo: Todoo = {\n           id: todos.length + 1,\n"
                },
                {
                    "date": 1714993973477,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -74,9 +74,9 @@\n   const handleKeyDown = (event: React.KeyboardEvent<HTMLInputElement>) => {\n     const trimmedTodo = newTodoTitle.trim();\n \n     if (event.key === 'Enter') {\n-      event.currentTarget.disabled = tru\n+      event.currentTarget.disabled = true\n \n       if (trimmedTodo) {\n         const newTodo: Todoo = {\n           id: todos.length + 1,\n"
                },
                {
                    "date": 1714993987246,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -74,11 +74,12 @@\n   const handleKeyDown = (event: React.KeyboardEvent<HTMLInputElement>) => {\n     const trimmedTodo = newTodoTitle.trim();\n \n     if (event.key === 'Enter') {\n-      event.currentTarget.disabled = true\n+      event.preventDefault();\n \n       if (trimmedTodo) {\n+        event\n         const newTodo: Todoo = {\n           id: todos.length + 1,\n           userId: USER_ID,\n           title: trimmedTodo,\n"
                },
                {
                    "date": 1714993992505,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -77,9 +77,9 @@\n     if (event.key === 'Enter') {\n       event.preventDefault();\n \n       if (trimmedTodo) {\n-        event\n+        event.currentTarget.\n         const newTodo: Todoo = {\n           id: todos.length + 1,\n           userId: USER_ID,\n           title: trimmedTodo,\n"
                },
                {
                    "date": 1714993997760,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -77,9 +77,9 @@\n     if (event.key === 'Enter') {\n       event.preventDefault();\n \n       if (trimmedTodo) {\n-        event.currentTarget.\n+        event.currentTarget.disabled = true;\n         const newTodo: Todoo = {\n           id: todos.length + 1,\n           userId: USER_ID,\n           title: trimmedTodo,\n"
                },
                {
                    "date": 1714994006733,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -78,8 +78,9 @@\n       event.preventDefault();\n \n       if (trimmedTodo) {\n         event.currentTarget.disabled = true;\n+        \n         const newTodo: Todoo = {\n           id: todos.length + 1,\n           userId: USER_ID,\n           title: trimmedTodo,\n"
                },
                {
                    "date": 1714994015452,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -78,9 +78,10 @@\n       event.preventDefault();\n \n       if (trimmedTodo) {\n         event.currentTarget.disabled = true;\n-        \n+\n+        try {\n         const newTodo: Todoo = {\n           id: todos.length + 1,\n           userId: USER_ID,\n           title: trimmedTodo,\n"
                },
                {
                    "date": 1714994021516,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -87,8 +87,10 @@\n           title: trimmedTodo,\n           completed: false,\n         };\n \n+          await\n+\n         setTodos(prevTodos => [...prevTodos, newTodo]);\n         setNewTodoTitle('');\n       } else {\n         setError(true);\n"
                },
                {
                    "date": 1714994027021,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -87,9 +87,9 @@\n           title: trimmedTodo,\n           completed: false,\n         };\n \n-          await\n+          await create\n \n         setTodos(prevTodos => [...prevTodos, newTodo]);\n         setNewTodoTitle('');\n       } else {\n"
                },
                {
                    "date": 1714994032193,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -87,9 +87,9 @@\n           title: trimmedTodo,\n           completed: false,\n         };\n \n-          await create\n+          await createBrotliDecompress(new)\n \n         setTodos(prevTodos => [...prevTodos, newTodo]);\n         setNewTodoTitle('');\n       } else {\n"
                },
                {
                    "date": 1714994041198,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -87,9 +87,9 @@\n           title: trimmedTodo,\n           completed: false,\n         };\n \n-          await createBrotliDecompress(new)\n+          await createTodo(newTodo);\n \n         setTodos(prevTodos => [...prevTodos, newTodo]);\n         setNewTodoTitle('');\n       } else {\n"
                },
                {
                    "date": 1714994091781,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -91,9 +91,9 @@\n           await createTodo(newTodo);\n \n         setTodos(prevTodos => [...prevTodos, newTodo]);\n         setNewTodoTitle('');\n-      } else {\n+      } catch {\n         setError(true);\n         setErrorType('empty');\n       }\n     }\n"
                },
                {
                    "date": 1714994105313,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -91,11 +91,11 @@\n           await createTodo(newTodo);\n \n         setTodos(prevTodos => [...prevTodos, newTodo]);\n         setNewTodoTitle('');\n-      } catch {\n+      } catch (err) {\n         setError(true);\n-        setErrorType('empty');\n+        setErrorType('load');\n       }\n     }\n   };\n \n"
                },
                {
                    "date": 1714994111801,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -94,9 +94,9 @@\n         setNewTodoTitle('');\n       } catch (err) {\n         setError(true);\n         setErrorType('load');\n-      }\n+      } \n     }\n   };\n \n   const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n"
                },
                {
                    "date": 1714994117546,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -94,9 +94,9 @@\n         setNewTodoTitle('');\n       } catch (err) {\n         setError(true);\n         setErrorType('load');\n-      } \n+      } finnally \n     }\n   };\n \n   const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n"
                },
                {
                    "date": 1714994126119,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -94,9 +94,10 @@\n         setNewTodoTitle('');\n       } catch (err) {\n         setError(true);\n         setErrorType('load');\n-      } finnally \n+        } finnally {\n+          setError\n     }\n   };\n \n   const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n"
                },
                {
                    "date": 1714994131663,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -95,9 +95,10 @@\n       } catch (err) {\n         setError(true);\n         setErrorType('load');\n         } finnally {\n-          setError\n+          setError(true);\n+          setE\n     }\n   };\n \n   const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n"
                },
                {
                    "date": 1714994137962,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -96,9 +96,9 @@\n         setError(true);\n         setErrorType('load');\n         } finnally {\n           setError(true);\n-          setE\n+          setErrorType('load')\n     }\n   };\n \n   const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n"
                },
                {
                    "date": 1714994149117,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -95,10 +95,9 @@\n       } catch (err) {\n         setError(true);\n         setErrorType('load');\n         } finnally {\n-          setError(true);\n-          setErrorType('load')\n+         \n     }\n   };\n \n   const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n"
                },
                {
                    "date": 1714994156036,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -94,10 +94,10 @@\n         setNewTodoTitle('');\n       } catch (err) {\n         setError(true);\n         setErrorType('load');\n-        } finnally {\n-         \n+        } finally {\n+event\n     }\n   };\n \n   const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n"
                },
                {
                    "date": 1714994162410,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -95,9 +95,9 @@\n       } catch (err) {\n         setError(true);\n         setErrorType('load');\n         } finally {\n-event\n+event.currentTarget.\n     }\n   };\n \n   const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n"
                },
                {
                    "date": 1714994167486,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -95,9 +95,9 @@\n       } catch (err) {\n         setError(true);\n         setErrorType('load');\n         } finally {\n-event.currentTarget.\n+event.currentTarget.disabled = \n     }\n   };\n \n   const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n"
                },
                {
                    "date": 1714994177180,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -95,10 +95,11 @@\n       } catch (err) {\n         setError(true);\n         setErrorType('load');\n         } finally {\n-event.currentTarget.disabled = \n-    }\n+          event.currentTarget.disabled = false;\n+        }\n+        \n   };\n \n   const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n     setNewTodoTitle(event.target.value);\n"
                },
                {
                    "date": 1714994183127,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -80,26 +80,28 @@\n       if (trimmedTodo) {\n         event.currentTarget.disabled = true;\n \n         try {\n-        const newTodo: Todoo = {\n-          id: todos.length + 1,\n-          userId: USER_ID,\n-          title: trimmedTodo,\n-          completed: false,\n-        };\n+          const newTodo: Todoo = {\n+            id: todos.length + 1,\n+            userId: USER_ID,\n+            title: trimmedTodo,\n+            completed: false,\n+          };\n \n           await createTodo(newTodo);\n \n-        setTodos(prevTodos => [...prevTodos, newTodo]);\n-        setNewTodoTitle('');\n-      } catch (err) {\n-        setError(true);\n-        setErrorType('load');\n+          setTodos(prevTodos => [...prevTodos, newTodo]);\n+          setNewTodoTitle('');\n+        } catch (err) {\n+          setError(true);\n+          setErrorType('load');\n         } finally {\n           event.currentTarget.disabled = false;\n         }\n+      } else {\n         \n+      }\n   };\n \n   const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n     setNewTodoTitle(event.target.value);\n"
                },
                {
                    "date": 1714994189346,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -98,9 +98,9 @@\n         } finally {\n           event.currentTarget.disabled = false;\n         }\n       } else {\n-        \n+        setError(true;)\n       }\n   };\n \n   const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n"
                },
                {
                    "date": 1714994194946,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -98,9 +98,10 @@\n         } finally {\n           event.currentTarget.disabled = false;\n         }\n       } else {\n-        setError(true;)\n+        setError(true);\n+        seterror\n       }\n   };\n \n   const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n"
                },
                {
                    "date": 1714994200577,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -99,9 +99,9 @@\n           event.currentTarget.disabled = false;\n         }\n       } else {\n         setError(true);\n-        seterror\n+        setErrorType('emp')\n       }\n   };\n \n   const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n"
                },
                {
                    "date": 1714994205602,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -99,10 +99,11 @@\n           event.currentTarget.disabled = false;\n         }\n       } else {\n         setError(true);\n-        setErrorType('emp')\n+        setErrorType('empty');\n       }\n+      }\n   };\n \n   const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n     setNewTodoTitle(event.target.value);\n"
                },
                {
                    "date": 1714994320477,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -25,9 +25,9 @@\n         setTodos(todosData);\n       } catch (err) {\n         setError(true);\n         setErrorType('load');\n-      }\n+      } finnal\n     };\n \n     fetchTodos();\n   }, []);\n@@ -101,9 +101,9 @@\n       } else {\n         setError(true);\n         setErrorType('empty');\n       }\n-      }\n+    }\n   };\n \n   const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n     setNewTodoTitle(event.target.value);\n"
                },
                {
                    "date": 1714994328769,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -25,9 +25,11 @@\n         setTodos(todosData);\n       } catch (err) {\n         setError(true);\n         setErrorType('load');\n-      } finnal\n+      } finally {\n+        \n+      }\n     };\n \n     fetchTodos();\n   }, []);\n"
                },
                {
                    "date": 1714994334882,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -26,9 +26,9 @@\n       } catch (err) {\n         setError(true);\n         setErrorType('load');\n       } finally {\n-        \n+        document.q\n       }\n     };\n \n     fetchTodos();\n"
                },
                {
                    "date": 1714994341021,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -26,9 +26,9 @@\n       } catch (err) {\n         setError(true);\n         setErrorType('load');\n       } finally {\n-        document.q\n+        document.querySelector()\n       }\n     };\n \n     fetchTodos();\n"
                },
                {
                    "date": 1714994346373,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -26,9 +26,9 @@\n       } catch (err) {\n         setError(true);\n         setErrorType('load');\n       } finally {\n-        document.querySelector()\n+        document.querySelector('.todoa')\n       }\n     };\n \n     fetchTodos();\n"
                },
                {
                    "date": 1714994353954,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -26,9 +26,9 @@\n       } catch (err) {\n         setError(true);\n         setErrorType('load');\n       } finally {\n-        document.querySelector('.todoa')\n+        document.querySelector('.todoapp__new-todo')\n       }\n     };\n \n     fetchTodos();\n"
                },
                {
                    "date": 1714994359223,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -26,9 +26,9 @@\n       } catch (err) {\n         setError(true);\n         setErrorType('load');\n       } finally {\n-        document.querySelector('.todoapp__new-todo')\n+        document.querySelector('.todoapp__new-todo').disab\n       }\n     };\n \n     fetchTodos();\n"
                },
                {
                    "date": 1714994364992,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -26,9 +26,9 @@\n       } catch (err) {\n         setError(true);\n         setErrorType('load');\n       } finally {\n-        document.querySelector('.todoapp__new-todo').disab\n+        document.querySelector('.todoapp__new-todo').disabled = false\n       }\n     };\n \n     fetchTodos();\n"
                },
                {
                    "date": 1714994392044,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -26,9 +26,9 @@\n       } catch (err) {\n         setError(true);\n         setErrorType('load');\n       } finally {\n-        document.querySelector('.todoapp__new-todo').disabled = false\n+        document.querySelector('.t')\n       }\n     };\n \n     fetchTodos();\n"
                },
                {
                    "date": 1714994398800,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -25,10 +25,8 @@\n         setTodos(todosData);\n       } catch (err) {\n         setError(true);\n         setErrorType('load');\n-      } finally {\n-        document.querySelector('.t')\n       }\n     };\n \n     fetchTodos();\n@@ -102,10 +100,10 @@\n         }\n       } else {\n         setError(true);\n         setErrorType('empty');\n+        \n       }\n-    }\n   };\n \n   const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n     setNewTodoTitle(event.target.value);\n"
                },
                {
                    "date": 1714994404903,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -80,30 +80,26 @@\n       if (trimmedTodo) {\n         event.currentTarget.disabled = true;\n \n         try {\n-          const newTodo: Todoo = {\n-            id: todos.length + 1,\n-            userId: USER_ID,\n-            title: trimmedTodo,\n-            completed: false,\n-          };\n+        const newTodo: Todoo = {\n+          id: todos.length + 1,\n+          userId: USER_ID,\n+          title: trimmedTodo,\n+          completed: false,\n+        };\n \n           await createTodo(newTodo);\n \n-          setTodos(prevTodos => [...prevTodos, newTodo]);\n-          setNewTodoTitle('');\n-        } catch (err) {\n+        setTodos(prevTodos => [...prevTodos, newTodo]);\n+        setNewTodoTitle('');\n+      } catch (err) {\n+        setError(true);\n+        setErrorType('load');\n+        } finnally {\n           setError(true);\n-          setErrorType('load');\n-        } finally {\n-          event.currentTarget.disabled = false;\n-        }\n-      } else {\n-        setError(true);\n-        setErrorType('empty');\n-        \n-      }\n+          set\n+    }\n   };\n \n   const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n     setNewTodoTitle(event.target.value);\n"
                },
                {
                    "date": 1714994413052,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -79,26 +79,22 @@\n \n       if (trimmedTodo) {\n         event.currentTarget.disabled = true;\n \n-        try {\n+        try {}\n         const newTodo: Todoo = {\n           id: todos.length + 1,\n           userId: USER_ID,\n           title: trimmedTodo,\n           completed: false,\n         };\n \n-          await createTodo(newTodo);\n-\n         setTodos(prevTodos => [...prevTodos, newTodo]);\n         setNewTodoTitle('');\n-      } catch (err) {\n+      } else {\n         setError(true);\n-        setErrorType('load');\n-        } finnally {\n-          setError(true);\n-          set\n+        setErrorType('empty');\n+      }\n     }\n   };\n \n   const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n"
                },
                {
                    "date": 1714994420220,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -15,8 +15,9 @@\n   const [errorType, setErrorType] = useState<Error | null>(null);\n   const [filter, setFilter] = useState<Status>('all');\n   const [newTodoTitle, setNewTodoTitle] = useState('');\n   const [focus, setFocus] = useState<boolean>(true);\n+  const [loading, ] = useState<boolean>(false);\n \n   useEffect(() => {\n     const fetchTodos = async () => {\n       try {\n@@ -77,11 +78,8 @@\n     if (event.key === 'Enter') {\n       event.preventDefault();\n \n       if (trimmedTodo) {\n-        event.currentTarget.disabled = true;\n-\n-        try {}\n         const newTodo: Todoo = {\n           id: todos.length + 1,\n           userId: USER_ID,\n           title: trimmedTodo,\n@@ -135,8 +133,9 @@\n                 value={newTodoTitle}\n                 onChange={handleChange}\n                 onFocus={handleFocus}\n                 autoFocus={focus}\n+                disabled={loading}\n               />\n             </form>\n           </header>\n \n"
                },
                {
                    "date": 1714994425782,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -133,9 +133,8 @@\n                 value={newTodoTitle}\n                 onChange={handleChange}\n                 onFocus={handleFocus}\n                 autoFocus={focus}\n-                disabled={loading}\n               />\n             </form>\n           </header>\n \n"
                },
                {
                    "date": 1714994679596,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -15,9 +15,8 @@\n   const [errorType, setErrorType] = useState<Error | null>(null);\n   const [filter, setFilter] = useState<Status>('all');\n   const [newTodoTitle, setNewTodoTitle] = useState('');\n   const [focus, setFocus] = useState<boolean>(true);\n-  const [loading, ] = useState<boolean>(false);\n \n   useEffect(() => {\n     const fetchTodos = async () => {\n       try {\n@@ -85,8 +84,10 @@\n           title: trimmedTodo,\n           completed: false,\n         };\n \n+        setfocu\n+\n         setTodos(prevTodos => [...prevTodos, newTodo]);\n         setNewTodoTitle('');\n       } else {\n         setError(true);\n"
                },
                {
                    "date": 1714994686513,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -84,10 +84,12 @@\n           title: trimmedTodo,\n           completed: false,\n         };\n \n-        setfocu\n+        setFocus(false);\n \n+        \n+\n         setTodos(prevTodos => [...prevTodos, newTodo]);\n         setNewTodoTitle('');\n       } else {\n         setError(true);\n"
                },
                {
                    "date": 1714994694054,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -86,9 +86,11 @@\n         };\n \n         setFocus(false);\n \n-        \n+        try {\n+          await \n+        }\n \n         setTodos(prevTodos => [...prevTodos, newTodo]);\n         setNewTodoTitle('');\n       } else {\n"
                },
                {
                    "date": 1714994699671,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -87,9 +87,9 @@\n \n         setFocus(false);\n \n         try {\n-          await \n+          await postTodo(new)\n         }\n \n         setTodos(prevTodos => [...prevTodos, newTodo]);\n         setNewTodoTitle('');\n"
                },
                {
                    "date": 1714994717665,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -87,9 +87,10 @@\n \n         setFocus(false);\n \n         try {\n-          await postTodo(new)\n+          await postTodo(newTodo);\n+          \n         }\n \n         setTodos(prevTodos => [...prevTodos, newTodo]);\n         setNewTodoTitle('');\n"
                },
                {
                    "date": 1714994727777,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -88,9 +88,10 @@\n         setFocus(false);\n \n         try {\n           await postTodo(newTodo);\n-          \n+          const updatedTodos = await getTodos();\n+          set\n         }\n \n         setTodos(prevTodos => [...prevTodos, newTodo]);\n         setNewTodoTitle('');\n"
                },
                {
                    "date": 1714994733289,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -89,9 +89,9 @@\n \n         try {\n           await postTodo(newTodo);\n           const updatedTodos = await getTodos();\n-          set\n+          setTodos(updatedTodos)\n         }\n \n         setTodos(prevTodos => [...prevTodos, newTodo]);\n         setNewTodoTitle('');\n"
                },
                {
                    "date": 1714994741560,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -89,10 +89,10 @@\n \n         try {\n           await postTodo(newTodo);\n           const updatedTodos = await getTodos();\n-          setTodos(updatedTodos)\n-        }\n+          setTodos(updatedTodos);\n+        } cz\n \n         setTodos(prevTodos => [...prevTodos, newTodo]);\n         setNewTodoTitle('');\n       } else {\n"
                },
                {
                    "date": 1714994746848,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -90,9 +90,9 @@\n         try {\n           await postTodo(newTodo);\n           const updatedTodos = await getTodos();\n           setTodos(updatedTodos);\n-        } cz\n+        } catch (err)\n \n         setTodos(prevTodos => [...prevTodos, newTodo]);\n         setNewTodoTitle('');\n       } else {\n"
                },
                {
                    "date": 1714994780059,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -90,9 +90,11 @@\n         try {\n           await postTodo(newTodo);\n           const updatedTodos = await getTodos();\n           setTodos(updatedTodos);\n-        } catch (err)\n+        } catch (err) {\n+          set\n+        }\n \n         setTodos(prevTodos => [...prevTodos, newTodo]);\n         setNewTodoTitle('');\n       } else {\n"
                },
                {
                    "date": 1714994785938,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -91,9 +91,10 @@\n           await postTodo(newTodo);\n           const updatedTodos = await getTodos();\n           setTodos(updatedTodos);\n         } catch (err) {\n-          set\n+          setError(true);\n+          \n         }\n \n         setTodos(prevTodos => [...prevTodos, newTodo]);\n         setNewTodoTitle('');\n"
                },
                {
                    "date": 1714994791763,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -92,9 +92,9 @@\n           const updatedTodos = await getTodos();\n           setTodos(updatedTodos);\n         } catch (err) {\n           setError(true);\n-          \n+          setErrorType()\n         }\n \n         setTodos(prevTodos => [...prevTodos, newTodo]);\n         setNewTodoTitle('');\n"
                },
                {
                    "date": 1714994797709,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -92,9 +92,9 @@\n           const updatedTodos = await getTodos();\n           setTodos(updatedTodos);\n         } catch (err) {\n           setError(true);\n-          setErrorType()\n+          setErrorType('update');\n         }\n \n         setTodos(prevTodos => [...prevTodos, newTodo]);\n         setNewTodoTitle('');\n"
                },
                {
                    "date": 1714994806755,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -93,9 +93,9 @@\n           setTodos(updatedTodos);\n         } catch (err) {\n           setError(true);\n           setErrorType('update');\n-        }\n+        } \n \n         setTodos(prevTodos => [...prevTodos, newTodo]);\n         setNewTodoTitle('');\n       } else {\n"
                },
                {
                    "date": 1714994815380,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -93,9 +93,11 @@\n           setTodos(updatedTodos);\n         } catch (err) {\n           setError(true);\n           setErrorType('update');\n-        } \n+        } finally {\n+          setfoc\n+        }\n \n         setTodos(prevTodos => [...prevTodos, newTodo]);\n         setNewTodoTitle('');\n       } else {\n"
                },
                {
                    "date": 1714994820574,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -94,9 +94,9 @@\n         } catch (err) {\n           setError(true);\n           setErrorType('update');\n         } finally {\n-          setfoc\n+          setFocus(true);\n         }\n \n         setTodos(prevTodos => [...prevTodos, newTodo]);\n         setNewTodoTitle('');\n"
                },
                {
                    "date": 1714994828194,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -97,9 +97,9 @@\n         } finally {\n           setFocus(true);\n         }\n \n-        setTodos(prevTodos => [...prevTodos, newTodo]);\n+        // setTodos(prevTodos => [...prevTodos, newTodo]);\n         setNewTodoTitle('');\n       } else {\n         setError(true);\n         setErrorType('empty');\n"
                },
                {
                    "date": 1714994837462,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,182 @@\n+/* eslint-disable jsx-a11y/label-has-associated-control */\n+/* eslint-disable jsx-a11y/control-has-associated-label */\n+import React, { useEffect, useState } from 'react';\n+import { UserWarning } from './UserWarning';\n+import { USER_ID, getTodos } from './api/todos';\n+import { TodoList } from './Components/TodoList';\n+import { ErrorNotification } from './Components/ErrorNotification';\n+import { Footer } from './Components/Footer';\n+import { Status, Todoo } from './types/Todo';\n+import { Error } from './types/Todo';\n+\n+export const App: React.FC = () => {\n+  const [todos, setTodos] = useState<Todoo[]>([]);\n+  const [error, setError] = useState<boolean>(false);\n+  const [errorType, setErrorType] = useState<Error | null>(null);\n+  const [filter, setFilter] = useState<Status>('all');\n+  const [newTodoTitle, setNewTodoTitle] = useState('');\n+  const [focus, setFocus] = useState<boolean>(true);\n+\n+  useEffect(() => {\n+    const fetchTodos = async () => {\n+      try {\n+        const todosData = await getTodos();\n+\n+        setTodos(todosData);\n+      } catch (err) {\n+        setError(true);\n+        setErrorType('load');\n+      }\n+    };\n+\n+    fetchTodos();\n+  }, []);\n+\n+  if (!USER_ID) {\n+    return <UserWarning />;\n+  }\n+\n+  const handleFocus = () => {\n+    setFocus(true);\n+  };\n+\n+  const handleDeleteTodo = (id: number) => {\n+    setTodos(prevTodos => prevTodos.filter(todo => todo.id !== id));\n+\n+    setError(true);\n+\n+    setErrorType('delete');\n+  };\n+\n+  const handleToggleTodo = (id: number) => {\n+    setTodos(prev =>\n+      prev.map(todo =>\n+        todo.id === id ? { ...todo, completed: !todo.completed } : todo,\n+      ),\n+    );\n+  };\n+\n+  const handleToggleAllTodos = () => {\n+    const allCompleted = todos.every(todo => todo.completed);\n+\n+    setTodos(prev =>\n+      prev.map(todo => ({\n+        ...todo,\n+        completed: !allCompleted,\n+      })),\n+    );\n+  };\n+\n+  const hideError = () => {\n+    setError(false);\n+  };\n+\n+  const handleKeyDown = (event: React.KeyboardEvent<HTMLInputElement>) => {\n+    const trimmedTodo = newTodoTitle.trim();\n+\n+    if (event.key === 'Enter') {\n+      event.preventDefault();\n+\n+      if (trimmedTodo) {\n+        const newTodo: Todoo = {\n+          id: todos.length + 1,\n+          userId: USER_ID,\n+          title: trimmedTodo,\n+          completed: false,\n+        };\n+\n+        setFocus(false);\n+\n+        try {\n+          await postTodo(newTodo);\n+          const updatedTodos = await getTodos();\n+\n+          setTodos(updatedTodos);\n+        } catch (err) {\n+          setError(true);\n+          setErrorType('update');\n+        } finally {\n+          setFocus(true);\n+        }\n+\n+        // setTodos(prevTodos => [...prevTodos, newTodo]);\n+        setNewTodoTitle('');\n+      } else {\n+        setError(true);\n+        setErrorType('empty');\n+      }\n+    }\n+  };\n+\n+  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n+    setNewTodoTitle(event.target.value);\n+  };\n+\n+  const onClearCompleted = () => {\n+    setTodos(prevTodos => prevTodos.filter(todo => !todo.completed));\n+  };\n+\n+  const handleFilterChange = (newFilter: Status) => {\n+    setFilter(newFilter);\n+  };\n+\n+  return (\n+    <div className=\"todoapp\">\n+      {!USER_ID && <UserWarning />}\n+      <h1 className=\"todoapp__title\">todos</h1>\n+      {USER_ID && (\n+        <div className=\"todoapp__content\">\n+          <header className=\"todoapp__header\">\n+            {/* this button should have `active` class only if all todos are completed */}\n+            <button\n+              type=\"button\"\n+              className={`todoapp__toggle-all ${todos.every(todo => todo.completed) ? 'active' : ''}`}\n+              data-cy=\"ToggleAllButton\"\n+              onClick={handleToggleAllTodos}\n+            />\n+\n+            {/* Add a todo on form submit */}\n+            <form>\n+              <input\n+                data-cy=\"NewTodoField\"\n+                type=\"text\"\n+                className=\"todoapp__new-todo\"\n+                placeholder=\"What needs to be done?\"\n+                onKeyDown={handleKeyDown}\n+                value={newTodoTitle}\n+                onChange={handleChange}\n+                onFocus={handleFocus}\n+                autoFocus={focus}\n+              />\n+            </form>\n+          </header>\n+\n+          <TodoList\n+            todos={todos}\n+            onDeleteTodo={handleDeleteTodo}\n+            onToggleTodo={handleToggleTodo}\n+            filter={filter}\n+          />\n+\n+          {/* Hide the footer if there are no todos */}\n+          {todos.length > 0 && (\n+            <Footer\n+              filter={filter}\n+              todosCount={todos.length}\n+              completedTodosCount={todos.filter(todo => todo.completed).length}\n+              onClearCompleted={onClearCompleted}\n+              handleFilterChange={handleFilterChange}\n+            />\n+          )}\n+        </div>\n+      )}\n+      {/* DON'T use conditional rendering to hide the notification */}\n+      {/* Add the 'hidden' class to hide the message smoothly */}\n+      <ErrorNotification\n+        error={error}\n+        errorType={errorType}\n+        hideError={hideError}\n+      />\n+    </div>\n+  );\n+};\n"
                },
                {
                    "date": 1714994843661,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -70,9 +70,9 @@\n   const hideError = () => {\n     setError(false);\n   };\n \n-  const handleKeyDown = (event: React.KeyboardEvent<HTMLInputElement>) => {\n+  const handleKeyDown = async (event: React.KeyboardEvent<HTMLInputElement>) => {\n     const trimmedTodo = newTodoTitle.trim();\n \n     if (event.key === 'Enter') {\n       event.preventDefault();\n@@ -179,185 +179,4 @@\n       />\n     </div>\n   );\n };\n-/* eslint-disable jsx-a11y/label-has-associated-control */\n-/* eslint-disable jsx-a11y/control-has-associated-label */\n-import React, { useEffect, useState } from 'react';\n-import { UserWarning } from './UserWarning';\n-import { USER_ID, getTodos } from './api/todos';\n-import { TodoList } from './Components/TodoList';\n-import { ErrorNotification } from './Components/ErrorNotification';\n-import { Footer } from './Components/Footer';\n-import { Status, Todoo } from './types/Todo';\n-import { Error } from './types/Todo';\n-\n-export const App: React.FC = () => {\n-  const [todos, setTodos] = useState<Todoo[]>([]);\n-  const [error, setError] = useState<boolean>(false);\n-  const [errorType, setErrorType] = useState<Error | null>(null);\n-  const [filter, setFilter] = useState<Status>('all');\n-  const [newTodoTitle, setNewTodoTitle] = useState('');\n-  const [focus, setFocus] = useState<boolean>(true);\n-\n-  useEffect(() => {\n-    const fetchTodos = async () => {\n-      try {\n-        const todosData = await getTodos();\n-\n-        setTodos(todosData);\n-      } catch (err) {\n-        setError(true);\n-        setErrorType('load');\n-      }\n-    };\n-\n-    fetchTodos();\n-  }, []);\n-\n-  if (!USER_ID) {\n-    return <UserWarning />;\n-  }\n-\n-  const handleFocus = () => {\n-    setFocus(true);\n-  };\n-\n-  const handleDeleteTodo = (id: number) => {\n-    setTodos(prevTodos => prevTodos.filter(todo => todo.id !== id));\n-\n-    setError(true);\n-\n-    setErrorType('delete');\n-  };\n-\n-  const handleToggleTodo = (id: number) => {\n-    setTodos(prev =>\n-      prev.map(todo =>\n-        todo.id === id ? { ...todo, completed: !todo.completed } : todo,\n-      ),\n-    );\n-  };\n-\n-  const handleToggleAllTodos = () => {\n-    const allCompleted = todos.every(todo => todo.completed);\n-\n-    setTodos(prev =>\n-      prev.map(todo => ({\n-        ...todo,\n-        completed: !allCompleted,\n-      })),\n-    );\n-  };\n-\n-  const hideError = () => {\n-    setError(false);\n-  };\n-\n-  const handleKeyDown = (event: React.KeyboardEvent<HTMLInputElement>) => {\n-    const trimmedTodo = newTodoTitle.trim();\n-\n-    if (event.key === 'Enter') {\n-      event.preventDefault();\n-\n-      if (trimmedTodo) {\n-        const newTodo: Todoo = {\n-          id: todos.length + 1,\n-          userId: USER_ID,\n-          title: trimmedTodo,\n-          completed: false,\n-        };\n-\n-        setFocus(false);\n-\n-        try {\n-          await postTodo(newTodo);\n-          const updatedTodos = await getTodos();\n-          setTodos(updatedTodos);\n-        } catch (err) {\n-          setError(true);\n-          setErrorType('update');\n-        } finally {\n-          setFocus(true);\n-        }\n-\n-        // setTodos(prevTodos => [...prevTodos, newTodo]);\n-        setNewTodoTitle('');\n-      } else {\n-        setError(true);\n-        setErrorType('empty');\n-      }\n-    }\n-  };\n-\n-  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n-    setNewTodoTitle(event.target.value);\n-  };\n-\n-  const onClearCompleted = () => {\n-    setTodos(prevTodos => prevTodos.filter(todo => !todo.completed));\n-  };\n-\n-  const handleFilterChange = (newFilter: Status) => {\n-    setFilter(newFilter);\n-  };\n-\n-  return (\n-    <div className=\"todoapp\">\n-      {!USER_ID && <UserWarning />}\n-      <h1 className=\"todoapp__title\">todos</h1>\n-      {USER_ID && (\n-        <div className=\"todoapp__content\">\n-          <header className=\"todoapp__header\">\n-            {/* this button should have `active` class only if all todos are completed */}\n-            <button\n-              type=\"button\"\n-              className={`todoapp__toggle-all ${todos.every(todo => todo.completed) ? 'active' : ''}`}\n-              data-cy=\"ToggleAllButton\"\n-              onClick={handleToggleAllTodos}\n-            />\n-\n-            {/* Add a todo on form submit */}\n-            <form>\n-              <input\n-                data-cy=\"NewTodoField\"\n-                type=\"text\"\n-                className=\"todoapp__new-todo\"\n-                placeholder=\"What needs to be done?\"\n-                onKeyDown={handleKeyDown}\n-                value={newTodoTitle}\n-                onChange={handleChange}\n-                onFocus={handleFocus}\n-                autoFocus={focus}\n-              />\n-            </form>\n-          </header>\n-\n-          <TodoList\n-            todos={todos}\n-            onDeleteTodo={handleDeleteTodo}\n-            onToggleTodo={handleToggleTodo}\n-            filter={filter}\n-          />\n-\n-          {/* Hide the footer if there are no todos */}\n-          {todos.length > 0 && (\n-            <Footer\n-              filter={filter}\n-              todosCount={todos.length}\n-              completedTodosCount={todos.filter(todo => todo.completed).length}\n-              onClearCompleted={onClearCompleted}\n-              handleFilterChange={handleFilterChange}\n-            />\n-          )}\n-        </div>\n-      )}\n-      {/* DON'T use conditional rendering to hide the notification */}\n-      {/* Add the 'hidden' class to hide the message smoothly */}\n-      <ErrorNotification\n-        error={error}\n-        errorType={errorType}\n-        hideError={hideError}\n-      />\n-    </div>\n-  );\n-};\n"
                },
                {
                    "date": 1714994881827,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -146,8 +146,9 @@\n                 value={newTodoTitle}\n                 onChange={handleChange}\n                 onFocus={handleFocus}\n                 autoFocus={focus}\n+                \n               />\n             </form>\n           </header>\n \n"
                },
                {
                    "date": 1714994887769,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -146,9 +146,9 @@\n                 value={newTodoTitle}\n                 onChange={handleChange}\n                 onFocus={handleFocus}\n                 autoFocus={focus}\n-                \n+                disabled={!}\n               />\n             </form>\n           </header>\n \n"
                },
                {
                    "date": 1714994899736,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -70,9 +70,11 @@\n   const hideError = () => {\n     setError(false);\n   };\n \n-  const handleKeyDown = async (event: React.KeyboardEvent<HTMLInputElement>) => {\n+  const handleKeyDown = async (\n+    event: React.KeyboardEvent<HTMLInputElement>,\n+  ) => {\n     const trimmedTodo = newTodoTitle.trim();\n \n     if (event.key === 'Enter') {\n       event.preventDefault();\n@@ -146,9 +148,9 @@\n                 value={newTodoTitle}\n                 onChange={handleChange}\n                 onFocus={handleFocus}\n                 autoFocus={focus}\n-                disabled={!}\n+                disabled={!focus}\n               />\n             </form>\n           </header>\n \n"
                },
                {
                    "date": 1714994952276,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -89,9 +89,9 @@\n \n         setFocus(false);\n \n         try {\n-          await postTodo(newTodo);\n+          await getTodo(newTodo);\n           const updatedTodos = await getTodos();\n \n           setTodos(updatedTodos);\n         } catch (err) {\n"
                },
                {
                    "date": 1714995098936,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -89,9 +89,9 @@\n \n         setFocus(false);\n \n         try {\n-          await getTodo(newTodo);\n+          await post(newTodo);\n           const updatedTodos = await getTodos();\n \n           setTodos(updatedTodos);\n         } catch (err) {\n"
                },
                {
                    "date": 1714995412319,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,13 +1,13 @@\n /* eslint-disable jsx-a11y/label-has-associated-control */\n /* eslint-disable jsx-a11y/control-has-associated-label */\n import React, { useEffect, useState } from 'react';\n import { UserWarning } from './UserWarning';\n-import { USER_ID, getTodos } from './api/todos';\n+import { USER_ID, getTodos, postTodo } from './api/todos';\n import { TodoList } from './Components/TodoList';\n import { ErrorNotification } from './Components/ErrorNotification';\n import { Footer } from './Components/Footer';\n-import { Status, Todoo } from './types/Todo';\n+import { Status, Todo } from './types/Todo';\n import { Error } from './types/Todo';\n \n export const App: React.FC = () => {\n   const [todos, setTodos] = useState<Todoo[]>([]);\n@@ -89,9 +89,9 @@\n \n         setFocus(false);\n \n         try {\n-          await post(newTodo);\n+          await postTodo(newTodo);\n           const updatedTodos = await getTodos();\n \n           setTodos(updatedTodos);\n         } catch (err) {\n"
                },
                {
                    "date": 1714995427293,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -9,9 +9,9 @@\n import { Status, Todo } from './types/Todo';\n import { Error } from './types/Todo';\n \n export const App: React.FC = () => {\n-  const [todos, setTodos] = useState<Todoo[]>([]);\n+  const [todos, setTodos] = useState<Todo[]>([]);\n   const [error, setError] = useState<boolean>(false);\n   const [errorType, setErrorType] = useState<Error | null>(null);\n   const [filter, setFilter] = useState<Status>('all');\n   const [newTodoTitle, setNewTodoTitle] = useState('');\n"
                },
                {
                    "date": 1714995544667,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -42,9 +42,9 @@\n \n   const handleDeleteTodo = (id: number) => {\n     setTodos(prevTodos => prevTodos.filter(todo => todo.id !== id));\n \n-    setError(true);\n+    // setError(true);\n \n     setErrorType('delete');\n   };\n \n@@ -79,9 +79,9 @@\n     if (event.key === 'Enter') {\n       event.preventDefault();\n \n       if (trimmedTodo) {\n-        const newTodo: Todoo = {\n+        const newTodo: Todo = {\n           id: todos.length + 1,\n           userId: USER_ID,\n           title: trimmedTodo,\n           completed: false,\n"
                },
                {
                    "date": 1714995579372,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -40,12 +40,10 @@\n     setFocus(true);\n   };\n \n   const handleDeleteTodo = (id: number) => {\n-    setTodos(prevTodos => prevTodos.filter(todo => todo.id !== id));\n+    setTodos(prevTodos => prevTodos.filter(todo => todo.id !== id))\n \n-    // setError(true);\n-\n     setErrorType('delete');\n   };\n \n   const handleToggleTodo = (id: number) => {\n"
                }
            ],
            "date": 1714989434387,
            "name": "Commit-0",
            "content": "/* eslint-disable jsx-a11y/label-has-associated-control */\n/* eslint-disable jsx-a11y/control-has-associated-label */\nimport React, { useEffect, useState } from 'react';\nimport { UserWarning } from './UserWarning';\nimport { USER_ID, getTodos } from './api/todos';\nimport { TodoList } from './Components/TodoList';\nimport { ErrorNotification } from './Components/ErrorNotification';\nimport { Footer } from './Components/Footer';\nimport { Status, Todoo } from './types/Todo';\nimport { Error } from './types/Todo';\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState<Todoo[]>([]);\n  const [error, setError] = useState<boolean>(false);\n  const [errorType, setErrorType] = useState<Error | null>(null);\n  const [filter, setFilter] = useState<Status>('all');\n  const [newTodoTitle, setNewTodoTitle] = useState('');\n\n  useEffect(() => {\n    const fetchTodos = async () => {\n      try {\n        const todosData = await getTodos();\n\n        setTodos(todosData);\n      } catch (err) {\n        setError(true);\n        setErrorType('load');\n      }\n    };\n\n    fetchTodos();\n  }, []);\n\n  if (!USER_ID) {\n    return <UserWarning />;\n  }\n\n  const handleDeleteTodo = (id: number) => {\n    setTodos(prevTodos => prevTodos.filter(todo => todo.id !== id));\n\n    setError(true);\n\n    setErrorType('delete');\n  };\n\n  const handleToggleTodo = (id: number) => {\n    setTodos(prev =>\n      prev.map(todo =>\n        todo.id === id ? { ...todo, completed: !todo.completed } : todo,\n      ),\n    );\n  };\n\n  const handleToggleAllTodos = () => {\n    const allCompleted = todos.every(todo => todo.completed);\n\n    setTodos(prev =>\n      prev.map(todo => ({\n        ...todo,\n        completed: !allCompleted,\n      })),\n    );\n  };\n\n  const hideError = () => {\n    setError(false);\n  };\n\n  const handleKeyDown = (event: React.KeyboardEvent<HTMLInputElement>) => {\n    const trimmedTodo = newTodoTitle.trim();\n\n    if (event.key === 'Enter') {\n      event.preventDefault();\n\n      if (trimmedTodo) {\n        const newTodo: Todoo = {\n          id: todos.length + 1,\n          userId: USER_ID,\n          title: trimmedTodo,\n          completed: false,\n        };\n\n        setTodos(prevTodos => [...prevTodos, newTodo]);\n        setNewTodoTitle('');\n      } else {\n        setError(true);\n        setErrorType('empty');\n      }\n    }\n  };\n\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setNewTodoTitle(event.target.value);\n  };\n\n  const onClearCompleted = () => {\n    setTodos(prevTodos => prevTodos.filter(todo => !todo.completed));\n  };\n\n  const handleFilterChange = (newFilter: Status) => {\n    setFilter(newFilter);\n  };\n\n  return (\n    <div className=\"todoapp\">\n      {!USER_ID && <UserWarning />}\n      <h1 className=\"todoapp__title\">todos</h1>\n      {USER_ID && (\n        <div className=\"todoapp__content\">\n          <header className=\"todoapp__header\">\n            {/* this button should have `active` class only if all todos are completed */}\n            <button\n              type=\"button\"\n              className={`todoapp__toggle-all ${todos.every(todo => todo.completed) ? 'active' : ''}`}\n              data-cy=\"ToggleAllButton\"\n              onClick={handleToggleAllTodos}\n            />\n\n            {/* Add a todo on form submit */}\n            <form>\n              <input\n                data-cy=\"NewTodoField\"\n                type=\"text\"\n                className=\"todoapp__new-todo\"\n                placeholder=\"What needs to be done?\"\n                onKeyDown={handleKeyDown}\n                value={newTodoTitle}\n                onChange={handleChange}\n              />\n            </form>\n          </header>\n\n          <TodoList\n            todos={todos}\n            onDeleteTodo={handleDeleteTodo}\n            onToggleTodo={handleToggleTodo}\n            filter={filter}\n          />\n\n          {/* Hide the footer if there are no todos */}\n          {todos.length > 0 && (\n            <Footer\n              filter={filter}\n              todosCount={todos.length}\n              completedTodosCount={todos.filter(todo => todo.completed).length}\n              onClearCompleted={onClearCompleted}\n              handleFilterChange={handleFilterChange}\n            />\n          )}\n        </div>\n      )}\n      {/* DON'T use conditional rendering to hide the notification */}\n      {/* Add the 'hidden' class to hide the message smoothly */}\n      <ErrorNotification\n        error={error}\n        errorType={errorType}\n        hideError={hideError}\n      />\n    </div>\n  );\n};\n"
        }
    ]
}